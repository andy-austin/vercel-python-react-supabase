name: Test Suite

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
        python-version: ["3.11"]
    
# No database service needed - tests use mocks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.6

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add uv to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Node.js dependencies
        run: pnpm install

      - name: Create Python virtual environment
        run: uv venv .venv

      - name: Install Python dependencies
        run: uv pip install -r apps/api/requirements.txt --python .venv/bin/python

      - name: Set up environment variables
        run: |
          cat > .env.local << EOF
          POSTGRES_URL_NON_POOLING=postgresql://test:test@localhost:5432/test_db
          NEXT_PUBLIC_SUPABASE_URL=https://test.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY=test-anon-key
          EOF

      - name: Run linting
        run: pnpm lint

      - name: Run type checking
        run: pnpm typecheck

      - name: Run tests
        run: pnpm test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-node${{ matrix.node-version }}-python${{ matrix.python-version }}
          path: |
            apps/web/coverage/
            apps/api/htmlcov/
          retention-days: 30